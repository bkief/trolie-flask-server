from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from trolie-flask.models.base_model import Model
import re
from trolie-flask import util

import re  # noqa: E501

class EmergencyDurationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, duration_minutes=None):  # noqa: E501
        """EmergencyDurationsInner - a model defined in OpenAPI

        :param name: The name of this EmergencyDurationsInner.  # noqa: E501
        :type name: str
        :param duration_minutes: The duration_minutes of this EmergencyDurationsInner.  # noqa: E501
        :type duration_minutes: int
        """
        self.openapi_types = {
            'name': str,
            'duration_minutes': int
        }

        self.attribute_map = {
            'name': 'name',
            'duration_minutes': 'duration-minutes'
        }

        self._name = name
        self._duration_minutes = duration_minutes

    @classmethod
    def from_dict(cls, dikt) -> 'EmergencyDurationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The emergency_durations_inner of this EmergencyDurationsInner.  # noqa: E501
        :rtype: EmergencyDurationsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this EmergencyDurationsInner.

        A type of limit as defined in the Transmission Provider's operating manual, usually indicating specific scenarios under which the limit may be used as well as a maximum period for which the limit may be safely applied.   # noqa: E501

        :return: The name of this EmergencyDurationsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this EmergencyDurationsInner.

        A type of limit as defined in the Transmission Provider's operating manual, usually indicating specific scenarios under which the limit may be used as well as a maximum period for which the limit may be safely applied.   # noqa: E501

        :param name: The name of this EmergencyDurationsInner.
        :type name: str
        """
        if name is not None and len(name) > 20:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `20`")  # noqa: E501
        if name is not None and not re.search(r'^[A-Za-z\-]{3,10}$', name):  # noqa: E501
            raise ValueError("Invalid value for `name`, must be a follow pattern or equal to `/^[A-Za-z\-]{3,10}$/`")  # noqa: E501

        self._name = name

    @property
    def duration_minutes(self) -> int:
        """Gets the duration_minutes of this EmergencyDurationsInner.


        :return: The duration_minutes of this EmergencyDurationsInner.
        :rtype: int
        """
        return self._duration_minutes

    @duration_minutes.setter
    def duration_minutes(self, duration_minutes: int):
        """Sets the duration_minutes of this EmergencyDurationsInner.


        :param duration_minutes: The duration_minutes of this EmergencyDurationsInner.
        :type duration_minutes: int
        """
        if duration_minutes is not None and duration_minutes > 1440:  # noqa: E501
            raise ValueError("Invalid value for `duration_minutes`, must be a value less than or equal to `1440`")  # noqa: E501
        if duration_minutes is not None and duration_minutes < 0:  # noqa: E501
            raise ValueError("Invalid value for `duration_minutes`, must be a value greater than or equal to `0`")  # noqa: E501

        self._duration_minutes = duration_minutes
