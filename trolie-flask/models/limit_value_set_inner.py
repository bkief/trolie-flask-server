from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.limit import Limit
import re
from openapi_server import util

from openapi_server.models.limit import Limit  # noqa: E501
import re  # noqa: E501

class LimitValueSetInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration_name=None, limit=None):  # noqa: E501
        """LimitValueSetInner - a model defined in OpenAPI

        :param duration_name: The duration_name of this LimitValueSetInner.  # noqa: E501
        :type duration_name: str
        :param limit: The limit of this LimitValueSetInner.  # noqa: E501
        :type limit: Limit
        """
        self.openapi_types = {
            'duration_name': str,
            'limit': Limit
        }

        self.attribute_map = {
            'duration_name': 'duration-name',
            'limit': 'limit'
        }

        self._duration_name = duration_name
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt) -> 'LimitValueSetInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The limit_value_set_inner of this LimitValueSetInner.  # noqa: E501
        :rtype: LimitValueSetInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration_name(self) -> str:
        """Gets the duration_name of this LimitValueSetInner.

        A type of limit as defined in the Transmission Provider's operating manual, usually indicating specific scenarios under which the limit may be used as well as a maximum period for which the limit may be safely applied.   # noqa: E501

        :return: The duration_name of this LimitValueSetInner.
        :rtype: str
        """
        return self._duration_name

    @duration_name.setter
    def duration_name(self, duration_name: str):
        """Sets the duration_name of this LimitValueSetInner.

        A type of limit as defined in the Transmission Provider's operating manual, usually indicating specific scenarios under which the limit may be used as well as a maximum period for which the limit may be safely applied.   # noqa: E501

        :param duration_name: The duration_name of this LimitValueSetInner.
        :type duration_name: str
        """
        if duration_name is not None and len(duration_name) > 20:
            raise ValueError("Invalid value for `duration_name`, length must be less than or equal to `20`")  # noqa: E501
        if duration_name is not None and not re.search(r'^[A-Za-z\-]{3,10}$', duration_name):  # noqa: E501
            raise ValueError("Invalid value for `duration_name`, must be a follow pattern or equal to `/^[A-Za-z\-]{3,10}$/`")  # noqa: E501

        self._duration_name = duration_name

    @property
    def limit(self) -> Limit:
        """Gets the limit of this LimitValueSetInner.


        :return: The limit of this LimitValueSetInner.
        :rtype: Limit
        """
        return self._limit

    @limit.setter
    def limit(self, limit: Limit):
        """Sets the limit of this LimitValueSetInner.


        :param limit: The limit of this LimitValueSetInner.
        :type limit: Limit
        """

        self._limit = limit
