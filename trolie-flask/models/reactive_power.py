from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from trolie-flask.models.base_model import Model
from trolie-flask import util


class ReactivePower(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mvar=None):  # noqa: E501
        """ReactivePower - a model defined in OpenAPI

        :param mvar: The mvar of this ReactivePower.  # noqa: E501
        :type mvar: float
        """
        self.openapi_types = {
            'mvar': float
        }

        self.attribute_map = {
            'mvar': 'mvar'
        }

        self._mvar = mvar

    @classmethod
    def from_dict(cls, dikt) -> 'ReactivePower':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The reactive-power of this ReactivePower.  # noqa: E501
        :rtype: ReactivePower
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mvar(self) -> float:
        """Gets the mvar of this ReactivePower.


        :return: The mvar of this ReactivePower.
        :rtype: float
        """
        return self._mvar

    @mvar.setter
    def mvar(self, mvar: float):
        """Sets the mvar of this ReactivePower.


        :param mvar: The mvar of this ReactivePower.
        :type mvar: float
        """
        if mvar is None:
            raise ValueError("Invalid value for `mvar`, must not be `None`")  # noqa: E501
        if mvar is not None and mvar > 10000:  # noqa: E501
            raise ValueError("Invalid value for `mvar`, must be a value less than or equal to `10000`")  # noqa: E501
        if mvar is not None and mvar < -10000:  # noqa: E501
            raise ValueError("Invalid value for `mvar`, must be a value greater than or equal to `-10000`")  # noqa: E501

        self._mvar = mvar
