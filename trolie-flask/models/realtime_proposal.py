from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.real_time_proposal_header import RealTimeProposalHeader
from openapi_server.models.realtime_proposal_ratings_inner import RealtimeProposalRatingsInner
from openapi_server import util

from openapi_server.models.real_time_proposal_header import RealTimeProposalHeader  # noqa: E501
from openapi_server.models.realtime_proposal_ratings_inner import RealtimeProposalRatingsInner  # noqa: E501

class RealtimeProposal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proposal_header=None, ratings=None):  # noqa: E501
        """RealtimeProposal - a model defined in OpenAPI

        :param proposal_header: The proposal_header of this RealtimeProposal.  # noqa: E501
        :type proposal_header: RealTimeProposalHeader
        :param ratings: The ratings of this RealtimeProposal.  # noqa: E501
        :type ratings: List[RealtimeProposalRatingsInner]
        """
        self.openapi_types = {
            'proposal_header': RealTimeProposalHeader,
            'ratings': List[RealtimeProposalRatingsInner]
        }

        self.attribute_map = {
            'proposal_header': 'proposal-header',
            'ratings': 'ratings'
        }

        self._proposal_header = proposal_header
        self._ratings = ratings

    @classmethod
    def from_dict(cls, dikt) -> 'RealtimeProposal':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The realtime-proposal of this RealtimeProposal.  # noqa: E501
        :rtype: RealtimeProposal
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proposal_header(self) -> RealTimeProposalHeader:
        """Gets the proposal_header of this RealtimeProposal.


        :return: The proposal_header of this RealtimeProposal.
        :rtype: RealTimeProposalHeader
        """
        return self._proposal_header

    @proposal_header.setter
    def proposal_header(self, proposal_header: RealTimeProposalHeader):
        """Sets the proposal_header of this RealtimeProposal.


        :param proposal_header: The proposal_header of this RealtimeProposal.
        :type proposal_header: RealTimeProposalHeader
        """
        if proposal_header is None:
            raise ValueError("Invalid value for `proposal_header`, must not be `None`")  # noqa: E501

        self._proposal_header = proposal_header

    @property
    def ratings(self) -> List[RealtimeProposalRatingsInner]:
        """Gets the ratings of this RealtimeProposal.

        Real-Time Ratings Proposals  # noqa: E501

        :return: The ratings of this RealtimeProposal.
        :rtype: List[RealtimeProposalRatingsInner]
        """
        return self._ratings

    @ratings.setter
    def ratings(self, ratings: List[RealtimeProposalRatingsInner]):
        """Sets the ratings of this RealtimeProposal.

        Real-Time Ratings Proposals  # noqa: E501

        :param ratings: The ratings of this RealtimeProposal.
        :type ratings: List[RealtimeProposalRatingsInner]
        """
        if ratings is None:
            raise ValueError("Invalid value for `ratings`, must not be `None`")  # noqa: E501
        if ratings is not None and len(ratings) > 50000:
            raise ValueError("Invalid value for `ratings`, number of items must be less than or equal to `50000`")  # noqa: E501
        if ratings is not None and len(ratings) < 0:
            raise ValueError("Invalid value for `ratings`, number of items must be greater than or equal to `0`")  # noqa: E501

        self._ratings = ratings
